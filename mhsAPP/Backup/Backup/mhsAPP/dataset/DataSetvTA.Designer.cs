//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace mhsAPP.dataset {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetvTA")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetvTA : global::System.Data.DataSet {
        
        private vDaftarTADataTable tablevDaftarTA;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetvTA() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetvTA(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["vDaftarTA"] != null)) {
                    base.Tables.Add(new vDaftarTADataTable(ds.Tables["vDaftarTA"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vDaftarTADataTable vDaftarTA {
            get {
                return this.tablevDaftarTA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetvTA cln = ((DataSetvTA)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["vDaftarTA"] != null)) {
                    base.Tables.Add(new vDaftarTADataTable(ds.Tables["vDaftarTA"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablevDaftarTA = ((vDaftarTADataTable)(base.Tables["vDaftarTA"]));
            if ((initTable == true)) {
                if ((this.tablevDaftarTA != null)) {
                    this.tablevDaftarTA.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetvTA";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetvTA.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablevDaftarTA = new vDaftarTADataTable();
            base.Tables.Add(this.tablevDaftarTA);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevDaftarTA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetvTA ds = new DataSetvTA();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void vDaftarTARowChangeEventHandler(object sender, vDaftarTARowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vDaftarTADataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnNAMA_PRODI;
            
            private global::System.Data.DataColumn columnNPM;
            
            private global::System.Data.DataColumn columnNAMA_MAHASISWA;
            
            private global::System.Data.DataColumn columnNO_DOK_TA;
            
            private global::System.Data.DataColumn columnNAMAD1;
            
            private global::System.Data.DataColumn columnNAMAD2;
            
            private global::System.Data.DataColumn columnIPK;
            
            private global::System.Data.DataColumn columnKONSENTRASI;
            
            private global::System.Data.DataColumn columnJUDUL_TA;
            
            private global::System.Data.DataColumn columnMKPIL;
            
            private global::System.Data.DataColumn columnNILAI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vDaftarTADataTable() {
                this.TableName = "vDaftarTA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vDaftarTADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vDaftarTADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMA_PRODIColumn {
                get {
                    return this.columnNAMA_PRODI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NPMColumn {
                get {
                    return this.columnNPM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMA_MAHASISWAColumn {
                get {
                    return this.columnNAMA_MAHASISWA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO_DOK_TAColumn {
                get {
                    return this.columnNO_DOK_TA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMAD1Column {
                get {
                    return this.columnNAMAD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMAD2Column {
                get {
                    return this.columnNAMAD2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IPKColumn {
                get {
                    return this.columnIPK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KONSENTRASIColumn {
                get {
                    return this.columnKONSENTRASI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JUDUL_TAColumn {
                get {
                    return this.columnJUDUL_TA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MKPILColumn {
                get {
                    return this.columnMKPIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NILAIColumn {
                get {
                    return this.columnNILAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vDaftarTARow this[int index] {
                get {
                    return ((vDaftarTARow)(this.Rows[index]));
                }
            }
            
            public event vDaftarTARowChangeEventHandler vDaftarTARowChanging;
            
            public event vDaftarTARowChangeEventHandler vDaftarTARowChanged;
            
            public event vDaftarTARowChangeEventHandler vDaftarTARowDeleting;
            
            public event vDaftarTARowChangeEventHandler vDaftarTARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvDaftarTARow(vDaftarTARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vDaftarTARow AddvDaftarTARow(string NAMA_PRODI, int NPM, string NAMA_MAHASISWA, int NO_DOK_TA, string NAMAD1, string NAMAD2, double IPK, string KONSENTRASI, string JUDUL_TA, string MKPIL, string NILAI) {
                vDaftarTARow rowvDaftarTARow = ((vDaftarTARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NAMA_PRODI,
                        NPM,
                        NAMA_MAHASISWA,
                        NO_DOK_TA,
                        NAMAD1,
                        NAMAD2,
                        IPK,
                        KONSENTRASI,
                        JUDUL_TA,
                        MKPIL,
                        NILAI};
                rowvDaftarTARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvDaftarTARow);
                return rowvDaftarTARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                vDaftarTADataTable cln = ((vDaftarTADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new vDaftarTADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNAMA_PRODI = base.Columns["NAMA_PRODI"];
                this.columnNPM = base.Columns["NPM"];
                this.columnNAMA_MAHASISWA = base.Columns["NAMA_MAHASISWA"];
                this.columnNO_DOK_TA = base.Columns["NO_DOK_TA"];
                this.columnNAMAD1 = base.Columns["NAMAD1"];
                this.columnNAMAD2 = base.Columns["NAMAD2"];
                this.columnIPK = base.Columns["IPK"];
                this.columnKONSENTRASI = base.Columns["KONSENTRASI"];
                this.columnJUDUL_TA = base.Columns["JUDUL_TA"];
                this.columnMKPIL = base.Columns["MKPIL"];
                this.columnNILAI = base.Columns["NILAI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNAMA_PRODI = new global::System.Data.DataColumn("NAMA_PRODI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMA_PRODI);
                this.columnNPM = new global::System.Data.DataColumn("NPM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNPM);
                this.columnNAMA_MAHASISWA = new global::System.Data.DataColumn("NAMA_MAHASISWA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMA_MAHASISWA);
                this.columnNO_DOK_TA = new global::System.Data.DataColumn("NO_DOK_TA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO_DOK_TA);
                this.columnNAMAD1 = new global::System.Data.DataColumn("NAMAD1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMAD1);
                this.columnNAMAD2 = new global::System.Data.DataColumn("NAMAD2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMAD2);
                this.columnIPK = new global::System.Data.DataColumn("IPK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPK);
                this.columnKONSENTRASI = new global::System.Data.DataColumn("KONSENTRASI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKONSENTRASI);
                this.columnJUDUL_TA = new global::System.Data.DataColumn("JUDUL_TA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJUDUL_TA);
                this.columnMKPIL = new global::System.Data.DataColumn("MKPIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMKPIL);
                this.columnNILAI = new global::System.Data.DataColumn("NILAI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNILAI);
                this.columnNAMA_PRODI.MaxLength = 50;
                this.columnNAMA_MAHASISWA.MaxLength = 100;
                this.columnNAMAD1.MaxLength = 100;
                this.columnNAMAD2.MaxLength = 100;
                this.columnKONSENTRASI.MaxLength = 100;
                this.columnJUDUL_TA.MaxLength = 300;
                this.columnMKPIL.MaxLength = 50;
                this.columnNILAI.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vDaftarTARow NewvDaftarTARow() {
                return ((vDaftarTARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new vDaftarTARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(vDaftarTARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vDaftarTARowChanged != null)) {
                    this.vDaftarTARowChanged(this, new vDaftarTARowChangeEvent(((vDaftarTARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vDaftarTARowChanging != null)) {
                    this.vDaftarTARowChanging(this, new vDaftarTARowChangeEvent(((vDaftarTARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vDaftarTARowDeleted != null)) {
                    this.vDaftarTARowDeleted(this, new vDaftarTARowChangeEvent(((vDaftarTARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vDaftarTARowDeleting != null)) {
                    this.vDaftarTARowDeleting(this, new vDaftarTARowChangeEvent(((vDaftarTARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevDaftarTARow(vDaftarTARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetvTA ds = new DataSetvTA();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vDaftarTADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vDaftarTARow : global::System.Data.DataRow {
            
            private vDaftarTADataTable tablevDaftarTA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vDaftarTARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevDaftarTA = ((vDaftarTADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAMA_PRODI {
                get {
                    try {
                        return ((string)(this[this.tablevDaftarTA.NAMA_PRODIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAMA_PRODI\' in table \'vDaftarTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevDaftarTA.NAMA_PRODIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NPM {
                get {
                    try {
                        return ((int)(this[this.tablevDaftarTA.NPMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NPM\' in table \'vDaftarTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevDaftarTA.NPMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAMA_MAHASISWA {
                get {
                    try {
                        return ((string)(this[this.tablevDaftarTA.NAMA_MAHASISWAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAMA_MAHASISWA\' in table \'vDaftarTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevDaftarTA.NAMA_MAHASISWAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NO_DOK_TA {
                get {
                    try {
                        return ((int)(this[this.tablevDaftarTA.NO_DOK_TAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NO_DOK_TA\' in table \'vDaftarTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevDaftarTA.NO_DOK_TAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAMAD1 {
                get {
                    try {
                        return ((string)(this[this.tablevDaftarTA.NAMAD1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAMAD1\' in table \'vDaftarTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevDaftarTA.NAMAD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAMAD2 {
                get {
                    try {
                        return ((string)(this[this.tablevDaftarTA.NAMAD2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAMAD2\' in table \'vDaftarTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevDaftarTA.NAMAD2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double IPK {
                get {
                    try {
                        return ((double)(this[this.tablevDaftarTA.IPKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IPK\' in table \'vDaftarTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevDaftarTA.IPKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KONSENTRASI {
                get {
                    try {
                        return ((string)(this[this.tablevDaftarTA.KONSENTRASIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KONSENTRASI\' in table \'vDaftarTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevDaftarTA.KONSENTRASIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JUDUL_TA {
                get {
                    try {
                        return ((string)(this[this.tablevDaftarTA.JUDUL_TAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JUDUL_TA\' in table \'vDaftarTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevDaftarTA.JUDUL_TAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MKPIL {
                get {
                    try {
                        return ((string)(this[this.tablevDaftarTA.MKPILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MKPIL\' in table \'vDaftarTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevDaftarTA.MKPILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NILAI {
                get {
                    try {
                        return ((string)(this[this.tablevDaftarTA.NILAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NILAI\' in table \'vDaftarTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevDaftarTA.NILAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMA_PRODINull() {
                return this.IsNull(this.tablevDaftarTA.NAMA_PRODIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMA_PRODINull() {
                this[this.tablevDaftarTA.NAMA_PRODIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNPMNull() {
                return this.IsNull(this.tablevDaftarTA.NPMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNPMNull() {
                this[this.tablevDaftarTA.NPMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMA_MAHASISWANull() {
                return this.IsNull(this.tablevDaftarTA.NAMA_MAHASISWAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMA_MAHASISWANull() {
                this[this.tablevDaftarTA.NAMA_MAHASISWAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNO_DOK_TANull() {
                return this.IsNull(this.tablevDaftarTA.NO_DOK_TAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNO_DOK_TANull() {
                this[this.tablevDaftarTA.NO_DOK_TAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMAD1Null() {
                return this.IsNull(this.tablevDaftarTA.NAMAD1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMAD1Null() {
                this[this.tablevDaftarTA.NAMAD1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMAD2Null() {
                return this.IsNull(this.tablevDaftarTA.NAMAD2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMAD2Null() {
                this[this.tablevDaftarTA.NAMAD2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIPKNull() {
                return this.IsNull(this.tablevDaftarTA.IPKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIPKNull() {
                this[this.tablevDaftarTA.IPKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKONSENTRASINull() {
                return this.IsNull(this.tablevDaftarTA.KONSENTRASIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKONSENTRASINull() {
                this[this.tablevDaftarTA.KONSENTRASIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJUDUL_TANull() {
                return this.IsNull(this.tablevDaftarTA.JUDUL_TAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJUDUL_TANull() {
                this[this.tablevDaftarTA.JUDUL_TAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMKPILNull() {
                return this.IsNull(this.tablevDaftarTA.MKPILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMKPILNull() {
                this[this.tablevDaftarTA.MKPILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNILAINull() {
                return this.IsNull(this.tablevDaftarTA.NILAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNILAINull() {
                this[this.tablevDaftarTA.NILAIColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vDaftarTARowChangeEvent : global::System.EventArgs {
            
            private vDaftarTARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vDaftarTARowChangeEvent(vDaftarTARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vDaftarTARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace mhsAPP.dataset.DataSetvTATableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vDaftarTATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vDaftarTATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vDaftarTA";
            tableMapping.ColumnMappings.Add("NAMA_PRODI", "NAMA_PRODI");
            tableMapping.ColumnMappings.Add("NPM", "NPM");
            tableMapping.ColumnMappings.Add("NAMA_MAHASISWA", "NAMA_MAHASISWA");
            tableMapping.ColumnMappings.Add("NO_DOK_TA", "NO_DOK_TA");
            tableMapping.ColumnMappings.Add("NAMAD1", "NAMAD1");
            tableMapping.ColumnMappings.Add("NAMAD2", "NAMAD2");
            tableMapping.ColumnMappings.Add("IPK", "IPK");
            tableMapping.ColumnMappings.Add("KONSENTRASI", "KONSENTRASI");
            tableMapping.ColumnMappings.Add("JUDUL_TA", "JUDUL_TA");
            tableMapping.ColumnMappings.Add("MKPIL", "MKPIL");
            tableMapping.ColumnMappings.Add("NILAI", "NILAI");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::mhsAPP.Properties.Settings.Default.DBTAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NAMA_PRODI, NPM, NAMA_MAHASISWA, NO_DOK_TA, NAMAD1, NAMAD2, IPK, KONSENTRA" +
                "SI, JUDUL_TA, MKPIL, NILAI FROM dbo.vDaftarTA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        NAMA_PRODI, NPM, NAMA_MAHASISWA, NO_DOK_TA, NAMAD1, NAMAD2, IPK, KO" +
                "NSENTRASI, JUDUL_TA, MKPIL, NILAI\r\nFROM            vDaftarTA\r\nWHERE        (NO_D" +
                "OK_TA = @nodok)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nodok", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "NO_DOK_TA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetvTA.vDaftarTADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetvTA.vDaftarTADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetvTA.vDaftarTADataTable dataTable = new DataSetvTA.vDaftarTADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(DataSetvTA.vDaftarTADataTable dataTable, global::System.Nullable<int> nodok) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((nodok.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(nodok.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSetvTA.vDaftarTADataTable GetDataBy(global::System.Nullable<int> nodok) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((nodok.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(nodok.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            DataSetvTA.vDaftarTADataTable dataTable = new DataSetvTA.vDaftarTADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591